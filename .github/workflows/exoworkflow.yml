name: Workflow lors d'un push
on: push

jobs:
  mon_premier_job:
    name: récupération install et message
    runs-on: ubuntu-latest
    steps:
      - name: récupération du code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Mise en cache des dépendances Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Installation des dépendances Maven
        run: mvn install

      - name: Build
        run: mvn package

      - name: Exécution des tests
        run: mvn test
        # Bloque le build en cas d'échec des tests
        continue-on-error: false

      - name: afficher un message pour indiquer le build de l'appli
        run: echo "appli buildée"

      - name: Upload l'artefact avec le build de l'appli
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          name: artefact_upload
          path: target/*.jar

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: '--debug'

      - name: construction de l'image docker
        run: docker build -t elyanis/myapp:latest .

      - name: Push l'image Docker sur Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push elyanis/myapp:latest
